version: '3'

networks:
  laravel-app:

services:
  #Apache & PHP 8
  apache:
    build: 
      context: .
      dockerfile: Dockerfile
    image: 'php:8.1-apache'
    container_name: php-apache_container
    restart: always
    ports:
      - ${PROJECT_PORT}
    volumes:
      - ${PROJECT_FOLDER}:/var/www/html
      - ./apache/default.conf:/etc/apache2/sites-enabled/000-default.conf:ro
    depends_on:
      - mysql
    links:
      - mysql
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
     - laravel-app

  #Mysql V8.0.28
  mysql:
    image: mysql:8.0.28
    container_name: mysql_container
    restart: unless-stopped
    tty: true
    ports: 
      - ${MYSQ_PORT}
    environment: 
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      #MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'  
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes: 
      - ./mysql:/var/lib/mysql    
    networks:
     - laravel-app

  #Artisan alias, to run ~ docker-compose run artisan 'command'
  artisan:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes: 
      - ./src:/var/www/html
    depends_on: 
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
     - laravel-app

  #Node V13.7 & NPM,  to run ~ docker-compose run npm 'command'
  npm: 
    image: node:13.7
    container_name: npm
    volumes: 
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']